import {
  AnchorMdx,
  CodeOrSourceMdx,
  Docs,
  HeadersMdx
} from "./chunk-IMDOD5WX.js";
import {
  __name
} from "./chunk-5OPI5CQV.js";
import {
  require_client
} from "./chunk-NYB7WJY7.js";
import {
  require_react
} from "./chunk-IP6FQFDQ.js";
import {
  __toESM
} from "./chunk-7D4SUZUM.js";

// node_modules/@storybook/addon-docs/dist/_browser-chunks/chunk-74ZUTOZN.js
var import_react = __toESM(require_react(), 1);

// node_modules/@storybook/react-dom-shim/dist/_browser-chunks/chunk-JK72E6FR.js
var __defProp = Object.defineProperty;
var __name2 = (target, value) => __defProp(target, "name", { value, configurable: true });

// node_modules/@storybook/react-dom-shim/dist/react-18.js
var React = __toESM(require_react());
var ReactDOM = __toESM(require_client());
var nodes = /* @__PURE__ */ new Map();
function getIsReactActEnvironment() {
  return globalThis.IS_REACT_ACT_ENVIRONMENT;
}
__name2(getIsReactActEnvironment, "getIsReactActEnvironment");
var WithCallback = __name2(({
  callback,
  children
}) => {
  const once = React.useRef();
  React.useLayoutEffect(() => {
    if (once.current === callback) {
      return;
    }
    once.current = callback;
    callback();
  }, [callback]);
  return children;
}, "WithCallback");
if (typeof Promise.withResolvers === "undefined") {
  Promise.withResolvers = () => {
    let resolve = null;
    let reject = null;
    const promise = new Promise((res, rej) => {
      resolve = res;
      reject = rej;
    });
    return { promise, resolve, reject };
  };
}
var renderElement = __name2(async (node, el, rootOptions) => {
  const root = await getReactRoot(el, rootOptions);
  if (getIsReactActEnvironment()) {
    root.render(node);
    return;
  }
  const { promise, resolve } = Promise.withResolvers();
  root.render(React.createElement(WithCallback, { callback: resolve }, node));
  return promise;
}, "renderElement");
var unmountElement = __name2((el, shouldUseNewRootApi) => {
  const root = nodes.get(el);
  if (root) {
    root.unmount();
    nodes.delete(el);
  }
}, "unmountElement");
var getReactRoot = __name2(async (el, rootOptions) => {
  let root = nodes.get(el);
  if (!root) {
    root = ReactDOM.createRoot(el, rootOptions);
    nodes.set(el, root);
  }
  return root;
}, "getReactRoot");

// node_modules/@storybook/addon-docs/dist/_browser-chunks/chunk-74ZUTOZN.js
var defaultComponents = {
  code: CodeOrSourceMdx,
  a: AnchorMdx,
  ...HeadersMdx
};
var _ErrorBoundary = class _ErrorBoundary2 extends import_react.Component {
  constructor() {
    super(...arguments);
    this.state = { hasError: false };
  }
  static getDerivedStateFromError() {
    return { hasError: true };
  }
  componentDidCatch(err) {
    const { showException } = this.props;
    showException(err);
  }
  render() {
    const { hasError } = this.state;
    const { children } = this.props;
    return hasError ? null : import_react.default.createElement(import_react.default.Fragment, null, children);
  }
};
__name(_ErrorBoundary, "ErrorBoundary");
var ErrorBoundary = _ErrorBoundary;
var _DocsRenderer = class _DocsRenderer2 {
  constructor() {
    this.render = async (context, docsParameter, element) => {
      const components = {
        ...defaultComponents,
        ...docsParameter?.components
      };
      const TDocs = Docs;
      return new Promise((resolve, reject) => {
        import("./@storybook_addon-docs___@mdx-js_react.js").then(
          ({ MDXProvider }) => (
            // We use a `key={}` here to reset the `hasError` state each time we render ErrorBoundary
            renderElement(
              import_react.default.createElement(ErrorBoundary, { showException: reject, key: Math.random() }, import_react.default.createElement(MDXProvider, { components }, import_react.default.createElement(TDocs, { context, docsParameter }))),
              element
            )
          )
        ).then(() => resolve());
      });
    };
    this.unmount = (element) => {
      unmountElement(element);
    };
  }
};
__name(_DocsRenderer, "DocsRenderer");
var DocsRenderer = _DocsRenderer;

export {
  defaultComponents,
  DocsRenderer
};
//# sourceMappingURL=chunk-F63DYTUS.js.map
